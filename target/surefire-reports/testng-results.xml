<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="11" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-05-16T17:41:29 PKT" name="Suite" finished-at="2022-05-16T17:42:10 PKT" duration-ms="41031">
    <groups>
      <group name="Regression">
        <method signature="LoginTestCases.Cart(java.lang.reflect.Method)[pri:3, instance:automationtest.test.LoginTestCases@3b6ddd1d]" name="Cart" class="automationtest.test.LoginTestCases"/>
        <method signature="LoginTestCases.Checkout1(java.lang.reflect.Method)[pri:4, instance:automationtest.test.LoginTestCases@3b6ddd1d]" name="Checkout1" class="automationtest.test.LoginTestCases"/>
        <method signature="LoginTestCases.Checkout2(java.lang.reflect.Method)[pri:5, instance:automationtest.test.LoginTestCases@3b6ddd1d]" name="Checkout2" class="automationtest.test.LoginTestCases"/>
        <method signature="LoginTestCases.Checkout3(java.lang.reflect.Method)[pri:6, instance:automationtest.test.LoginTestCases@3b6ddd1d]" name="Checkout3" class="automationtest.test.LoginTestCases"/>
        <method signature="LoginTestCases.Inventory(java.lang.reflect.Method)[pri:2, instance:automationtest.test.LoginTestCases@3b6ddd1d]" name="Inventory" class="automationtest.test.LoginTestCases"/>
        <method signature="LoginTestCases.successfullUserLogin(java.lang.reflect.Method)[pri:1, instance:automationtest.test.LoginTestCases@3b6ddd1d]" name="successfullUserLogin" class="automationtest.test.LoginTestCases"/>
        <method signature="Verifyfalse.Cart(java.lang.reflect.Method)[pri:3, instance:automationtest.test.Verifyfalse@6cd28fa7]" name="Cart" class="automationtest.test.Verifyfalse"/>
        <method signature="Verifyfalse.Checkout1(java.lang.reflect.Method)[pri:4, instance:automationtest.test.Verifyfalse@6cd28fa7]" name="Checkout1" class="automationtest.test.Verifyfalse"/>
        <method signature="Verifyfalse.Checkout2(java.lang.reflect.Method)[pri:5, instance:automationtest.test.Verifyfalse@6cd28fa7]" name="Checkout2" class="automationtest.test.Verifyfalse"/>
        <method signature="Verifyfalse.Checkout3(java.lang.reflect.Method)[pri:6, instance:automationtest.test.Verifyfalse@6cd28fa7]" name="Checkout3" class="automationtest.test.Verifyfalse"/>
        <method signature="Verifyfalse.Inventory(java.lang.reflect.Method)[pri:2, instance:automationtest.test.Verifyfalse@6cd28fa7]" name="Inventory" class="automationtest.test.Verifyfalse"/>
        <method signature="Verifyfalse.successfullUserLogin(java.lang.reflect.Method)[pri:1, instance:automationtest.test.Verifyfalse@6cd28fa7]" name="successfullUserLogin" class="automationtest.test.Verifyfalse"/>
      </group> <!-- Regression -->
      <group name="Smoke">
        <method signature="LoginTestCases.Cart(java.lang.reflect.Method)[pri:3, instance:automationtest.test.LoginTestCases@3b6ddd1d]" name="Cart" class="automationtest.test.LoginTestCases"/>
        <method signature="LoginTestCases.Checkout1(java.lang.reflect.Method)[pri:4, instance:automationtest.test.LoginTestCases@3b6ddd1d]" name="Checkout1" class="automationtest.test.LoginTestCases"/>
        <method signature="LoginTestCases.Checkout2(java.lang.reflect.Method)[pri:5, instance:automationtest.test.LoginTestCases@3b6ddd1d]" name="Checkout2" class="automationtest.test.LoginTestCases"/>
        <method signature="LoginTestCases.Checkout3(java.lang.reflect.Method)[pri:6, instance:automationtest.test.LoginTestCases@3b6ddd1d]" name="Checkout3" class="automationtest.test.LoginTestCases"/>
        <method signature="LoginTestCases.Inventory(java.lang.reflect.Method)[pri:2, instance:automationtest.test.LoginTestCases@3b6ddd1d]" name="Inventory" class="automationtest.test.LoginTestCases"/>
        <method signature="LoginTestCases.successfullUserLogin(java.lang.reflect.Method)[pri:1, instance:automationtest.test.LoginTestCases@3b6ddd1d]" name="successfullUserLogin" class="automationtest.test.LoginTestCases"/>
        <method signature="Verifyfalse.Cart(java.lang.reflect.Method)[pri:3, instance:automationtest.test.Verifyfalse@6cd28fa7]" name="Cart" class="automationtest.test.Verifyfalse"/>
        <method signature="Verifyfalse.Checkout1(java.lang.reflect.Method)[pri:4, instance:automationtest.test.Verifyfalse@6cd28fa7]" name="Checkout1" class="automationtest.test.Verifyfalse"/>
        <method signature="Verifyfalse.Checkout2(java.lang.reflect.Method)[pri:5, instance:automationtest.test.Verifyfalse@6cd28fa7]" name="Checkout2" class="automationtest.test.Verifyfalse"/>
        <method signature="Verifyfalse.Checkout3(java.lang.reflect.Method)[pri:6, instance:automationtest.test.Verifyfalse@6cd28fa7]" name="Checkout3" class="automationtest.test.Verifyfalse"/>
        <method signature="Verifyfalse.Inventory(java.lang.reflect.Method)[pri:2, instance:automationtest.test.Verifyfalse@6cd28fa7]" name="Inventory" class="automationtest.test.Verifyfalse"/>
        <method signature="Verifyfalse.successfullUserLogin(java.lang.reflect.Method)[pri:1, instance:automationtest.test.Verifyfalse@6cd28fa7]" name="successfullUserLogin" class="automationtest.test.Verifyfalse"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2022-05-16T17:41:29 PKT" name="LoginTestCases" finished-at="2022-05-16T17:42:10 PKT" duration-ms="41031">
      <class name="automationtest.test.Verifyfalse">
        <test-method is-config="true" signature="Setup()[pri:0, instance:automationtest.test.Verifyfalse@6cd28fa7]" started-at="2022-05-16T17:41:51 PKT" name="Setup" finished-at="2022-05-16T17:41:54 PKT" duration-ms="3161" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method signature="successfullUserLogin(java.lang.reflect.Method)[pri:1, instance:automationtest.test.Verifyfalse@6cd28fa7]" started-at="2022-05-16T17:41:54 PKT" name="successfullUserLogin" description="Verify that User can login with correct username and password" finished-at="2022-05-16T17:41:57 PKT" duration-ms="3279" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void automationtest.test.Verifyfalse.successfullUserLogin(java.lang.reflect.Method) throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfullUserLogin -->
        <test-method signature="Inventory(java.lang.reflect.Method)[pri:2, instance:automationtest.test.Verifyfalse@6cd28fa7]" started-at="2022-05-16T17:41:57 PKT" name="Inventory" description="Verify that User is on Invertory Page" finished-at="2022-05-16T17:42:00 PKT" duration-ms="3155" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void automationtest.test.Verifyfalse.Inventory(java.lang.reflect.Method) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Inventory -->
        <test-method signature="Cart(java.lang.reflect.Method)[pri:3, instance:automationtest.test.Verifyfalse@6cd28fa7]" started-at="2022-05-16T17:42:00 PKT" name="Cart" description="Verify that User is on Cart Page" finished-at="2022-05-16T17:42:03 PKT" duration-ms="3136" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void automationtest.test.Verifyfalse.Cart(java.lang.reflect.Method) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Cart -->
        <test-method signature="Checkout1(java.lang.reflect.Method)[pri:4, instance:automationtest.test.Verifyfalse@6cd28fa7]" started-at="2022-05-16T17:42:03 PKT" name="Checkout1" description="Fill Checkout Form" finished-at="2022-05-16T17:42:07 PKT" duration-ms="3509" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void automationtest.test.Verifyfalse.Checkout1(java.lang.reflect.Method) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Checkout1 -->
        <test-method signature="Checkout2(java.lang.reflect.Method)[pri:5, instance:automationtest.test.Verifyfalse@6cd28fa7]" started-at="2022-05-16T17:42:07 PKT" name="Checkout2" description="Verify the order" finished-at="2022-05-16T17:42:10 PKT" duration-ms="3207" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void automationtest.test.Verifyfalse.Checkout2(java.lang.reflect.Method) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Checkout2 -->
        <test-method signature="Checkout3(java.lang.reflect.Method)[pri:6, instance:automationtest.test.Verifyfalse@6cd28fa7]" started-at="2022-05-16T17:42:10 PKT" name="Checkout3" description="Verify text" finished-at="2022-05-16T17:42:10 PKT" duration-ms="39" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void automationtest.test.Verifyfalse.Checkout3(java.lang.reflect.Method) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [rr] but found [THANK YOU FOR YOUR ORDER]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [rr] but found [THANK YOU FOR YOUR ORDER]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at automationtest.test.Verifyfalse.Checkout3(Verifyfalse.java:98)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Checkout3 -->
        <test-method is-config="true" signature="broweserClosure()[pri:0, instance:automationtest.test.Verifyfalse@6cd28fa7]" started-at="2022-05-16T17:42:10 PKT" name="broweserClosure" finished-at="2022-05-16T17:42:10 PKT" duration-ms="63" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- broweserClosure -->
      </class> <!-- automationtest.test.Verifyfalse -->
      <class name="automationtest.test.LoginTestCases">
        <test-method is-config="true" signature="Setup()[pri:0, instance:automationtest.test.LoginTestCases@3b6ddd1d]" started-at="2022-05-16T17:41:29 PKT" name="Setup" finished-at="2022-05-16T17:41:34 PKT" duration-ms="4682" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method signature="successfullUserLogin(java.lang.reflect.Method)[pri:1, instance:automationtest.test.LoginTestCases@3b6ddd1d]" started-at="2022-05-16T17:41:34 PKT" name="successfullUserLogin" description="Verify that User can login with correct username and password" finished-at="2022-05-16T17:41:37 PKT" duration-ms="3429" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void automationtest.test.LoginTestCases.successfullUserLogin(java.lang.reflect.Method) throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfullUserLogin -->
        <test-method signature="Inventory(java.lang.reflect.Method)[pri:2, instance:automationtest.test.LoginTestCases@3b6ddd1d]" started-at="2022-05-16T17:41:37 PKT" name="Inventory" description="Verify that User is on Invertory Page" finished-at="2022-05-16T17:41:41 PKT" duration-ms="3160" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void automationtest.test.LoginTestCases.Inventory(java.lang.reflect.Method) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Inventory -->
        <test-method signature="Cart(java.lang.reflect.Method)[pri:3, instance:automationtest.test.LoginTestCases@3b6ddd1d]" started-at="2022-05-16T17:41:41 PKT" name="Cart" description="Verify that User is on Cart Page" finished-at="2022-05-16T17:41:44 PKT" duration-ms="3152" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void automationtest.test.LoginTestCases.Cart(java.lang.reflect.Method) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Cart -->
        <test-method signature="Checkout1(java.lang.reflect.Method)[pri:4, instance:automationtest.test.LoginTestCases@3b6ddd1d]" started-at="2022-05-16T17:41:44 PKT" name="Checkout1" description="Fill Checkout Form" finished-at="2022-05-16T17:41:47 PKT" duration-ms="3497" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void automationtest.test.LoginTestCases.Checkout1(java.lang.reflect.Method) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Checkout1 -->
        <test-method signature="Checkout2(java.lang.reflect.Method)[pri:5, instance:automationtest.test.LoginTestCases@3b6ddd1d]" started-at="2022-05-16T17:41:47 PKT" name="Checkout2" description="Verify the order" finished-at="2022-05-16T17:41:50 PKT" duration-ms="3239" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void automationtest.test.LoginTestCases.Checkout2(java.lang.reflect.Method) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Checkout2 -->
        <test-method signature="Checkout3(java.lang.reflect.Method)[pri:6, instance:automationtest.test.LoginTestCases@3b6ddd1d]" started-at="2022-05-16T17:41:50 PKT" name="Checkout3" description="Verify text" finished-at="2022-05-16T17:41:51 PKT" duration-ms="55" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void automationtest.test.LoginTestCases.Checkout3(java.lang.reflect.Method) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Checkout3 -->
        <test-method is-config="true" signature="broweserClosure()[pri:0, instance:automationtest.test.LoginTestCases@3b6ddd1d]" started-at="2022-05-16T17:41:51 PKT" name="broweserClosure" finished-at="2022-05-16T17:41:51 PKT" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- broweserClosure -->
      </class> <!-- automationtest.test.LoginTestCases -->
    </test> <!-- LoginTestCases -->
  </suite> <!-- Suite -->
</testng-results>
